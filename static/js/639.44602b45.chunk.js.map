{"version":3,"file":"static/js/639.44602b45.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","page/RegisterPage.jsx","../node_modules/yup-password/index.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Container} from 'components/BasicsStyled/BasicsStyled.styled'\n\n\nexport const ContainerForm = styled(Container)`\nwidth: 340px;\n`;\n","import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport YupPassword from 'yup-password'\nimport { ContainerForm } from './RegisterForm.styled';\nimport { Button, Form, Input, Label, Messege } from 'components/BasicsStyled/BasicsStyled.styled'\nimport {signUp} from 'redux/auth/operations'\nimport { useDispatch } from 'react-redux';\n\nYupPassword(yup) // extend yup\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch()\n\n  const schema = yup.object({\n    name: yup.string().min(3).max(25).required(),\n    email: yup.string().email().required(),\n    password: yup.string().password().required(),\n  }).required();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({resolver: yupResolver(schema)})\n\n  const onSubmit = date => {\n    dispatch(signUp(date))\n    reset()\n  }\n\n\n  return(\n    <ContainerForm>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n      <Label>Name\n        <Input defaultValue=\"\" {...register('name')}/>\n        <Messege>{errors.name?.message}</Messege>\n\n      </Label> \n\n      <Label>Email\n        <Input defaultValue=\"\" {...register('email')}/>\n        <Messege>{errors.email?.message}</Messege>\n\n      </Label> \n\n      <Label>Password\n        <Input type=\"password\" defaultValue=\"\" {...register('password')}/>\n        <Messege>{errors.password?.message}</Messege>\n\n      </Label>\n\n      <Button type=\"submit\">Register</Button>\n    </Form>\n    </ContainerForm>\n\n  )\n}\n\nexport default RegisterForm","import RegisterForm  from \"components/RegisterForm\"\n\n\nconst RegisterPage = () => {\n  return(\n    <RegisterForm/>\n  )\n}\n\nexport default RegisterPage","'use strict'\n\n// pluralize\nconst p = function (word, num) {\n    return num === 1 ? word : `${word}s`\n}\n\nconst isNullOrUndefined = function (value) {\n    return value === null || value === undefined\n}\n\nfunction minLowercase(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} lowercase ' + p('letter', length)\n    return this.test({\n        name: 'minLowercase',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[a-z]/g) || []).length >= length\n        }\n    })\n} // minLowercase()\n\nfunction minUppercase(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} uppercase ' + p('letter', length)\n    return this.test({\n        name: 'minUppercase',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[A-Z]/g) || []).length >= length\n        }\n    })\n} // minUppercase()\n\nfunction minNumbers(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('number', length)\n    return this.test({\n        name: 'minNumber',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[0-9]/g) || []).length >= length\n        }\n    })\n} // minNumber()\n\nfunction minSymbols(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('symbol', length)\n    return this.test({\n        name: 'minSymbol',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[^a-zA-Z0-9\\s]/g) || []).length >= length\n        }\n    })\n} // minSymbol()\n\nfunction minRepeating(length = 2, message) {\n    const msg = message || '${path} must not contain sequences of more than ${length} repeated ' + p('character', length)\n    return this.test({\n        name: 'minRepeating',\n        exclusive: true,\n        message: msg,\n        params: { length: length },\n        test(value) {\n            return isNullOrUndefined(value) || ! new RegExp(`(.)\\\\1{${length},}`).test(value)\n        }\n    })\n} // minRepeating()\n\nfunction minWords(length = 2, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('word', length)\n    const rx = new RegExp('[a-zA-Z0-9]')\n    return this.test({\n        name: 'minWords',\n        exclusive: true,\n        message: msg,\n        params: { length: length },\n        test(value) {\n            return isNullOrUndefined(value) || value.split(' ').filter(v => !! v && rx.test(v)).length >= length\n        }\n    })\n} // minWords()\n\nfunction password() {\n    return this\n        .min(8)\n        .max(250)\n        .minLowercase(1)\n        .minUppercase(1)\n        .minNumbers(1)\n        .minSymbols(1)\n} // password()\n\nfunction setup(yup) {\n    yup.addMethod(yup.string, 'minLowercase', minLowercase)\n    yup.addMethod(yup.string, 'minUppercase', minUppercase)\n    yup.addMethod(yup.string, 'minNumber', minNumbers)\n    yup.addMethod(yup.string, 'minNumbers', minNumbers)\n    yup.addMethod(yup.string, 'minSymbol', minSymbols)\n    yup.addMethod(yup.string, 'minSymbols', minSymbols)\n    yup.addMethod(yup.string, 'minRepeating', minRepeating)\n    yup.addMethod(yup.string, 'minWords', minWords)\n    yup.addMethod(yup.string, 'password', password)\n}\n\nmodule.exports = setup\n"],"names":["ContainerForm","styled","Container","YupPassword","yup","dispatch","useDispatch","schema","name","min","max","required","email","password","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","reset","onSubmit","date","signUp","defaultValue","message","type","p","word","num","isNullOrUndefined","value","undefined","minLowercase","length","msg","this","test","exclusive","params","match","minUppercase","minNumbers","minSymbols","minRepeating","RegExp","minWords","rx","split","filter","v","module","exports","addMethod","string"],"sourceRoot":""}